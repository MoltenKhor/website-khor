"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[837],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=o.createContext({}),s=function(e){var t=o.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return o.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=s(r),h=n,m=d["".concat(u,".").concat(h)]||d[h]||p[h]||i;return r?o.createElement(m,l(l({ref:t},c),{},{components:r})):o.createElement(m,l({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=h;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[d]="string"==typeof e?e:n,l[1]=a;for(var s=2;s<i;s++)l[s]=r[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"},8738:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var o=r(7462),n=(r(7294),r(3905));const i={sidebar_position:1},l="ISO Pad",a={unversionedId:"build-guides/iso-pad",id:"build-guides/iso-pad",title:"ISO Pad",description:"This Guide will help you build your ISO macropad kit.",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/build-guides/iso-pad.md",sourceDirName:"build-guides",slug:"/build-guides/iso-pad",permalink:"/it/docs/build-guides/iso-pad",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Build Guides",permalink:"/it/docs/category/build-guides"},next:{title:"Milk 2%",permalink:"/it/docs/build-guides/milk"}},u={},s=[{value:"0 - What you need",id:"0---what-you-need",level:2},{value:"1 - Screw the standoffs in the case",id:"1---screw-the-standoffs-in-the-case",level:2},{value:"2 - Solder the headers on the PCB",id:"2---solder-the-headers-on-the-pcb",level:2},{value:"3 - Solder the microcontroller",id:"3---solder-the-microcontroller",level:2},{value:"3.1 ProMicro ATMel32u4",id:"31-promicro-atmel32u4",level:3},{value:"3.2 Helios RP2040",id:"32-helios-rp2040",level:3},{value:"4 - Flash the firmware on your microcontroller",id:"4---flash-the-firmware-on-your-microcontroller",level:2},{value:"4.1 - ATMel32u4",id:"41---atmel32u4",level:3},{value:"4.2 - RP2040",id:"42---rp2040",level:3},{value:"5 - Configure your macropad",id:"5---configure-your-macropad",level:2}],c={toc:s},d="wrapper";function p(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"iso-pad"},"ISO Pad"),(0,n.kt)("p",null,"This Guide will help you build your ISO macropad kit."),(0,n.kt)("p",null,"PHOTO HERE"),(0,n.kt)("h2",{id:"0---what-you-need"},"0 - What you need"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Solder Iron"),(0,n.kt)("li",{parentName:"ul"},"Solder wire"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Soldering skills")),(0,n.kt)("li",{parentName:"ul"},"A computer in order to flash the firmware (MacOS, Windows, Linux)")),(0,n.kt)("h2",{id:"1---screw-the-standoffs-in-the-case"},"1 - Screw the standoffs in the case"),(0,n.kt)("p",null,"Use the flat head hex scres to mount the standoffs in the case"),(0,n.kt)("p",null,"PHOTO HERE"),(0,n.kt)("h2",{id:"2---solder-the-headers-on-the-pcb"},"2 - Solder the headers on the PCB"),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Check the right side of the PCB before solder!")),(0,n.kt)("p",null,"PHOTO HERE"),(0,n.kt)("h2",{id:"3---solder-the-microcontroller"},"3 - Solder the microcontroller"),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Make sure of which microcontroller you are using, this tutorial shows a Promicro32u4 and Helios RP2040, follow the right part!")),(0,n.kt)("h3",{id:"31-promicro-atmel32u4"},"3.1 ProMicro ATMel32u4"),(0,n.kt)("p",null,"Position the microcontroller facing up (with the chip showing up), solder the needed pins."),(0,n.kt)("p",null,"PHOTO HERE"),(0,n.kt)("h3",{id:"32-helios-rp2040"},"3.2 Helios RP2040"),(0,n.kt)("p",null,"Position the microcontroller facing up (with the chip showing up), ",(0,n.kt)("strong",{parentName:"p"},"check the photo for the pin position")," as the Helios has an extra row of pins."),(0,n.kt)("p",null,"PHOTO HERE"),(0,n.kt)("h2",{id:"4---flash-the-firmware-on-your-microcontroller"},"4 - Flash the firmware on your microcontroller"),(0,n.kt)("p",null,"Like step 3, this one too has 2 different paths depending on the microcontroller you have."),(0,n.kt)("h3",{id:"41---atmel32u4"},"4.1 - ATMel32u4"),(0,n.kt)("p",null,"Flash your firmware with QMK blablablabla...\nlink firmware "),(0,n.kt)("h3",{id:"42---rp2040"},"4.2 - RP2040"),(0,n.kt)("p",null,"Connect the RP2040 to your computer, it should show up as a RaspberryPi memory drive. "),(0,n.kt)("p",null,"Copy ",(0,n.kt)("strong",{parentName:"p"},"ZanniKB's ARM Firmware")," available from ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"https://LINK!!!!!!!!!"},"HERE"))," in the root memory off the RP2040."),(0,n.kt)("p",null,"Your microcontroller will automatically reboot after the file has finished transferring."),(0,n.kt)("h2",{id:"5---configure-your-macropad"},"5 - Configure your macropad"),(0,n.kt)("p",null,"Using VIA you can now set custom macros or keys to your macropad."))}p.isMDXComponent=!0}}]);